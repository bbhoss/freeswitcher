#!/usr/bin/env ruby

require 'rubygems'
require 'eventmachine'
require File.join(File.dirname(__FILE__), "..", 'lib', 'fsr', 'event')
require 'pp'
require 'yaml'
CONFIG = YAML::load(File.read(File.join(File.dirname(__FILE__), "..", "config.yaml"))) #Reads in YAML config file

module FreeSwitcher

  module Client
    def post_init
      say("auth #{CONFIG['settings']['inbound']['password']}")
      say('event plain ALL')
    end

    def receive_data(data)
      Server.broadcast(data)
      pp event = FSR::Event.from(data)
    end

    def say(line)
      send_data("#{line}\n\n")
    end
  end

  module Server
    CLIENTS = []

    def self.broadcast(data)
      CLIENTS.each{|client| client.send_data(data) }
    end

    def post_init
      CLIENTS << self
    end

    def unbind
      CLIENTS.delete(self)
    end
  end
end

EM.run do
  EventMachine::connect(CONFIG['settings']['inbound']['host'], CONFIG['settings']['inbound']['port'], FreeSwitcher::Client)
  EventMachine::start_server(CONFIG['settings']['outbound']['bindip'], CONFIG['settings']['outbound']['bindport'], FreeSwitcher::Server)
end
